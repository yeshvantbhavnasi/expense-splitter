"""Update_all_tables_to_use_uuid

Revision ID: c4e0c4f90ac0
Revises: 2db3d1df1b5e
Create Date: 2024-11-27 12:57:25.942422

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c4e0c4f90ac0'
down_revision: Union[str, None] = '2db3d1df1b5e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('expense_splits', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('expense_splits', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('expense_splits', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.drop_constraint('expense_splits_user_id_fkey', 'expense_splits', type_='foreignkey')
    op.drop_constraint('expense_splits_expense_id_fkey', 'expense_splits', type_='foreignkey')
    op.create_foreign_key(None, 'expense_splits', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'expense_splits', 'expenses', ['expense_id'], ['id'], ondelete='CASCADE')
    op.add_column('expenses', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('expenses', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('expenses', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('expenses', 'paid_by_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('expenses', 'group_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_constraint('expenses_paid_by_id_fkey', 'expenses', type_='foreignkey')
    op.drop_constraint('expenses_group_id_fkey', 'expenses', type_='foreignkey')
    op.create_foreign_key(None, 'expenses', 'users', ['paid_by_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'expenses', 'groups', ['group_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('group_members_group_id_fkey', 'group_members', type_='foreignkey')
    op.drop_constraint('group_members_user_id_fkey', 'group_members', type_='foreignkey')
    op.create_foreign_key(None, 'group_members', 'groups', ['group_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'group_members', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('settlements', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.drop_constraint('settlements_group_id_fkey', 'settlements', type_='foreignkey')
    op.drop_constraint('settlements_paid_to_id_fkey', 'settlements', type_='foreignkey')
    op.drop_constraint('settlements_paid_by_id_fkey', 'settlements', type_='foreignkey')
    op.create_foreign_key(None, 'settlements', 'groups', ['group_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'settlements', 'users', ['paid_by_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'settlements', 'users', ['paid_to_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'settlements', type_='foreignkey')
    op.drop_constraint(None, 'settlements', type_='foreignkey')
    op.drop_constraint(None, 'settlements', type_='foreignkey')
    op.create_foreign_key('settlements_paid_by_id_fkey', 'settlements', 'users', ['paid_by_id'], ['id'])
    op.create_foreign_key('settlements_paid_to_id_fkey', 'settlements', 'users', ['paid_to_id'], ['id'])
    op.create_foreign_key('settlements_group_id_fkey', 'settlements', 'groups', ['group_id'], ['id'])
    op.alter_column('settlements', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.drop_constraint(None, 'group_members', type_='foreignkey')
    op.drop_constraint(None, 'group_members', type_='foreignkey')
    op.create_foreign_key('group_members_user_id_fkey', 'group_members', 'users', ['user_id'], ['id'])
    op.create_foreign_key('group_members_group_id_fkey', 'group_members', 'groups', ['group_id'], ['id'])
    op.drop_constraint(None, 'expenses', type_='foreignkey')
    op.drop_constraint(None, 'expenses', type_='foreignkey')
    op.create_foreign_key('expenses_group_id_fkey', 'expenses', 'groups', ['group_id'], ['id'])
    op.create_foreign_key('expenses_paid_by_id_fkey', 'expenses', 'users', ['paid_by_id'], ['id'])
    op.alter_column('expenses', 'group_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('expenses', 'paid_by_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('expenses', 'description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('expenses', 'updated_at')
    op.drop_column('expenses', 'created_at')
    op.drop_constraint(None, 'expense_splits', type_='foreignkey')
    op.drop_constraint(None, 'expense_splits', type_='foreignkey')
    op.create_foreign_key('expense_splits_expense_id_fkey', 'expense_splits', 'expenses', ['expense_id'], ['id'])
    op.create_foreign_key('expense_splits_user_id_fkey', 'expense_splits', 'users', ['user_id'], ['id'])
    op.alter_column('expense_splits', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.drop_column('expense_splits', 'updated_at')
    op.drop_column('expense_splits', 'created_at')
    # ### end Alembic commands ###
